import { Audience, OperationType } from "@streamdal/protos/protos/sp_common";
import { IInternalClient } from "@streamdal/protos/protos/sp_internal.client";
import { StepStatus } from "./internal/process.js";
export { Audience, OperationType };
export interface StreamdalConfigs {
    streamdalUrl?: string;
    streamdalToken?: string;
    serviceName?: string;
    pipelineTimeout?: string;
    stepTimeout?: string;
    dryRun?: boolean;
    audiences?: Audience[];
}
export interface Configs {
    grpcClient: IInternalClient;
    streamdalUrl: string;
    streamdalToken: string;
    serviceName: string;
    pipelineTimeout: string;
    stepTimeout: string;
    dryRun: boolean;
    sessionId: string;
    audiences?: Audience[];
}
export interface StreamdalRequest {
    audience: Audience;
    data: Uint8Array;
}
export interface StreamdalResponse {
    data: Uint8Array;
    error: boolean;
    message?: string;
    stepStatuses?: StepStatus[];
}
export declare class Streamdal {
    private configs;
    constructor({ streamdalUrl, streamdalToken, serviceName, pipelineTimeout, stepTimeout, dryRun, audiences, }: StreamdalConfigs);
    processPipeline({ audience, data, }: StreamdalRequest): Promise<StreamdalResponse>;
}
